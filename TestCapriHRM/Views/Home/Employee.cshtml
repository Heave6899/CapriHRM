@model ViewModel.EmployeeModel
@{
    ViewBag.Title = "Employee";
}
@section styles{
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    <link href="~/plugins/vitalets-bootstrap-datepicker-c7af15b/css/datepicker.css" rel="stylesheet" />
}
@section scripts {
    <script src="~/plugins/vitalets-bootstrap-datepicker-c7af15b/js/bootstrap-datepicker.js"></script>
    <script>
    function getStates() {
    var model = {
        id: $('#EmployeeContact_Country').val(),
    };
    $.ajax({
    type: "GET",
    url: '@Url.Action("GetState1", "Home")',
    data: model,
    contentType: "application/json; charset=utf-8",
    dataType: "json",
    beforeSend: function () {
    //Show(); // Show loader icon
    },
        success: function (response) {
    var hrmlStr = '<option value=""> --Select --</option>'
            for (var i = 0; i < response.length; i++) {
                hrmlStr += '<option value="' + response[i].Value + '">' + response[i].Text + '</option>';
        }
        $("#EmployeeContact_State").html(hrmlStr);
    },
    complete: function () {
    // Hide(); // Hide loader icon
    },
    failure: function (jqXHR, textStatus, errorThrown) {
    //alert("HTTP Status: " + jqXHR.status + "; Error Text: " + jqXHR.responseText); // Display error message
    }
    });
    }
    </script>
    <script>

    function getCity() {
    var model = {
        id: $('#EmployeeContact_State').val(),
    };
    $.ajax({
    type: "GET",
    url: '@Url.Action("GetCity1", "Home")',
    data: model,
    contentType: "application/json; charset=utf-8",
    dataType: "json",
    beforeSend: function () {
    //Show(); // Show loader icon
    },
        success: function (response) {
    var hrmlStr = '<option value=""> --Select --</option>'
            for (var i = 0; i < response.length; i++) {
                hrmlStr += '<option value="' + response[i].Value + '">' + response[i].Text + '</option>';
        }
        $("#EmployeeContact_City").html(hrmlStr);
    },
    complete: function () {
    // Hide(); // Hide loader icon
    },
    failure: function (jqXHR, textStatus, errorThrown) {
    //alert("HTTP Status: " + jqXHR.status + "; Error Text: " + jqXHR.responseText); // Display error message
    }
    });
    }
    </script>
    <script type="text/javascript">
        $(function () {
            $('#BirthDate').datepicker({
                dateFormat: "dd/M/yy",
                changeMonth: true,
                changeYear: true,
            });
        });
    </script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
}
<h2>Employee</h2>
@using (Html.BeginForm("Employee", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(c => c.EmployeeId)
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.FristName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FristName, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.FristName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Gender, ViewBag.Gender as SelectList, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Nationality, (IEnumerable<SelectListItem>)ViewBag.Country, htmlAttributes: new { @class = "form-control", @autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.PanCardNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PanCardNo, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.PanCardNo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.MaritalStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.MaritalStatus, (IEnumerable<SelectListItem>)ViewBag.MartialStatus, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.EmployeeContact.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.EmployeeContact.Country, (IEnumerable<SelectListItem>)ViewBag.CountryIndia, htmlAttributes: new { @class = "form-control", @onChange = "getStates()" })
                        @Html.ValidationMessageFor(model => model.EmployeeContact.Country, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.EmployeeContact.State, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" id="stateCon">
                        @Html.DropDownListFor(model => model.EmployeeContact.State, new SelectList(ViewBag.State, "Value", "Text"), htmlAttributes: new { @class = "form-control", @onChange = "getCity()" })
                        @Html.ValidationMessageFor(model => model.EmployeeContact.State, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.EmployeeContact.City, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.EmployeeContact.City, new SelectList(ViewBag.City, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.EmployeeContact.City, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.EmployeeContact.BloodGroup, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.EmployeeContact.BloodGroup, (IEnumerable<SelectListItem>)ViewBag.BloodGroup, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.EmployeeContact.BloodGroup, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.EmployeeContact.EmailId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EmployeeContact.EmailId, new { htmlAttributes = new { @class = "form-control", @autocomplete = "xyz" } })
                        @Html.ValidationMessageFor(model => model.EmployeeContact.EmailId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.EmployeeContact.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EmployeeContact.MobileNo, new { htmlAttributes = new { @class = "form-control", @autocomplete = "xyz" } })
                        @Html.ValidationMessageFor(model => model.EmployeeContact.MobileNo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.EmployeeContact.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EmployeeContact.Address, new { htmlAttributes = new { @class = "form-control", @autocomplete = "xyz" } })
                        @Html.ValidationMessageFor(model => model.EmployeeContact.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.EmployeeContact.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EmployeeContact.ZipCode, new { htmlAttributes = new { @class = "form-control", @autocomplete = "xyz" } })
                        @Html.ValidationMessageFor(model => model.EmployeeContact.ZipCode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
          
            <div class="col-md-3  offset-2">
                <div class="form-group">
                    @{
                        var isUpdate = Model == null ? false : true;
                        Html.RenderAction("SubmitButton", "User", new { @controllname = "Home", @actionname = "Employee", @IsUpdate = isUpdate });

                    }
                </div>
            </div>
            <div class="col-md-3">

                <input type="button" value="Back To List" class="btn btn-default btn-block" onclick="location.href='@Url.Action("ListEmployee", "Home")'" />
            </div>
    
           
            <div class="col-md-3"></div>
        </div>
    </div>

}




