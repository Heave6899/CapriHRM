@model ViewModel.UserProfileModel
@{
    ViewBag.Title = "UserProfile";
}
@{ var name = Session["UserName"].ToString();


}
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
@section scripts {
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script>
    function getStates() {
    var model = {
        id: $('#userProfilePersonalModel_Country').val(),
    };
    $.ajax({
    type: "GET",
    url: '@Url.Action("GetState1", "Home")',
    data: model,
    contentType: "application/json; charset=utf-8",
    dataType: "json",
    beforeSend: function () {
    //Show(); // Show loader icon
    },
        success: function (response) {
    var hrmlStr = '<option value=""> --Select --</option>'
            for (var i = 0; i < response.length; i++) {
                hrmlStr += '<option value="' + response[i].Value + '">' + response[i].Text + '</option>';
        }
            $("#userProfilePersonalModel_State").html(hrmlStr);
    },
    complete: function () {
    // Hide(); // Hide loader icon
    },
    failure: function (jqXHR, textStatus, errorThrown) {
    //alert("HTTP Status: " + jqXHR.status + "; Error Text: " + jqXHR.responseText); // Display error message
    }
    });
    }
    </script>
    <script>

    function getCity() {
    var model = {
        id: $('#userProfilePersonalModel_State').val(),
    };
    $.ajax({
    type: "GET",
    url: '@Url.Action("GetCity1", "Home")',
    data: model,
    contentType: "application/json; charset=utf-8",
    dataType: "json",
    beforeSend: function () {
    //Show(); // Show loader icon
    },
        success: function (response) {
    var hrmlStr = '<option value=""> --Select --</option>'
            for (var i = 0; i < response.length; i++) {
                hrmlStr += '<option value="' + response[i].Value + '">' + response[i].Text + '</option>';
        }
            $("#userProfilePersonalModel_City").html(hrmlStr);
    },
    complete: function () {
    // Hide(); // Hide loader icon
    },
    failure: function (jqXHR, textStatus, errorThrown) {
    //alert("HTTP Status: " + jqXHR.status + "; Error Text: " + jqXHR.responseText); // Display error message
    }
    });
    }
    </script>
    <script type="text/javascript">
        $(function () {
            $('#BirthDate').datepicker({
                dateFormat: "dd/M/yy",
                changeMonth: true,
                changeYear: true,
                });
        });
    </script>
    <!--Hide Section-->
    <script type="text/javascript">
        $(document).ready(function () {

            $("#Edit").click(function (event) {
                $("#Profile").hide();
                $("#EditProfile").show();
            })
        });
        $(document).ready(function () {

            $("#Cancle").click(function (event) {
                $("#EditProfile").hide();
                $("#Profile").show();
            })
        });
        $(document).ready(function () {

            $("#Cancle1").click(function (event) {
                $("#EditProfile").hide();
                $("#Profile").show();
            })
        });
    </script>
}

@using (Html.BeginForm("UserProfile","User",FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(c => c.EmployeeId)
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <section class="content-header">
            <div class="container-fluid">
                <div class="row mb-2">
                    <div class="col-sm-6">
                        <h1>Profile</h1>
                    </div>
                </div>
            </div><!-- /.container-fluid -->
        </section>
        
        <!-- Main content -->
        <section class="content" >
            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-3">

                        <!-- Profile Image -->
                        <div class="card card-primary card-outline">
                            <div class="card-body box-profile">
                                <div class="text-center">
                                    <a href="javascript:void(0);" data-toggle="modal" data-target="#ModalProfileImage" >
                                        <img class="profile-user-img img-fluid img-circle "
                                             src="@Model.ProfileImage"
                                             alt="User profile picture">
                                    </a>

                                </div>


                                <h3 class="profile-username text-center"><label>@name</label></h3>
                                <p class="text-muted text-center">Software Engineer</p>
                                @*<ul class="list-group list-group-unbordered mb-3">
                        <li class="list-group-item">
                            <b>Followers</b> <a class="float-right">1,322</a>
                        </li>
                        <li class="list-group-item">
                            <b>Following</b> <a class="float-right">543</a>
                        </li>
                        <li class="list-group-item">
                            <b>Friends</b> <a class="float-right">13,287</a>
                        </li>
                    </ul>

                    <a href="#" class="btn btn-primary btn-block"><b>Follow</b></a>*@
                            </div>
                            <!-- /.card-body -->
                        </div>
                        <!-- /.card -->
                        <!-- About Me Box -->
                        <div class="card card-primary">
                            <div class="card-header">
                                <h3 class="card-title">About Me</h3>
                            </div>
                            <!-- /.card-header -->
                            <div class="card-body">
                                <strong><i class="fas fa-book mr-1"></i> Education</strong>
                                <p class="text-muted">
                                    B.S. in Computer Science from the University of Tennessee at Knoxville
                                </p>
                                <hr>
                                <strong><i class="fas fa-map-marker-alt mr-1"></i> Location</strong>
                                <p class="text-muted">Malibu, California</p>
                                <hr>
                                <strong><i class="fas fa-pencil-alt mr-1"></i> Skills</strong>
                                <p class="text-muted">
                                    <span class="tag tag-danger">UI Design</span>
                                    <span class="tag tag-success">Coding</span>
                                    <span class="tag tag-info">Javascript</span>
                                    <span class="tag tag-warning">PHP</span>
                                    <span class="tag tag-primary">Node.js</span>
                                </p>
                                <hr>
                                <strong><i class="far fa-file-alt mr-1"></i> Notes</strong>
                                <p class="text-muted">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam fermentum enim neque.</p>
                            </div>
                            <!-- /.card-body -->
                        </div>
                        <!-- /.card -->
                    </div>
                    <!-- /.col -->
                    <div class="col-md-9" id="Profile">
                        <div class="card">
                            <div class="card-header p-2">
                                <ul class="nav nav-pills">
                                    <li class="nav-item"><a class="nav-link active" href="#activity" data-toggle="tab">Personal</a></li>
                                    <li class="nav-item"><a class="nav-link" href="#settings" data-toggle="tab">Contact</a></li>
                                </ul>
                            </div><!-- /.card-header -->
                            <div class="card-body">
                                <div class="tab-content">
                                    <div class="active tab-pane" id="activity">
                                        <form class="form-horizontal">
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    <label class="form-control">@Model.Name</label>
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    <label class="form-control">@Model.BirthDate.Value.ToShortDateString()</label>
                                                </div>
                                            </div>

                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    <label class="form-control">@Model.NationalityName</label>
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    <label class="form-control">@ViewBag.GenderName</label>
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.userProfilePersonalModel.BloodGroup, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    <label class="form-control">@ViewBag.BloodGroupName</label>
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.MaritalStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    <label class="form-control">@ViewBag.MartialStatusName</label>
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.PanCardNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    <label class="form-control">@Model.PanCardNo</label>
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <div class="col-sm-4"></div>
                                                <div class="col-sm-4">
                                                    <input type="button" class="btn btn-default btn-block" id="Edit" value="Edit"  />
                                                </div>
                                                <div class="col-sm-4"></div>
                                            </div>
                                        </form>
                                    </div>

                                    <div class="tab-pane" id="settings">
                                        <form class="form-horizontal">
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.userProfilePersonalModel.EmailId, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    <label class="form-control">@Model.userProfilePersonalModel.EmailId</label>
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.userProfilePersonalModel.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    <label class="form-control">@Model.userProfilePersonalModel.MobileNo</label>
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.userProfilePersonalModel.CountryName, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    <label class="form-control">@Model.userProfilePersonalModel.CountryName</label>
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.userProfilePersonalModel.StateName, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    <label class="form-control">@Model.userProfilePersonalModel.StateName</label>
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.userProfilePersonalModel.CityName, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    <label class="form-control">@Model.userProfilePersonalModel.CityName</label>

                                                </div>
                                            </div>

                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.userProfilePersonalModel.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    <label class="form-control">@Model.userProfilePersonalModel.Address</label>
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.userProfilePersonalModel.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    <label class="form-control">@Model.userProfilePersonalModel.ZipCode</label>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                    <!-- /.tab-pane -->
                                </div>
                                <!-- /.tab-content -->
                            </div><!-- /.card-body -->
                        </div>
                        <!-- /.nav-tabs-custom -->
                    </div>
                    <!-- /.col -->
                    <!--Edit -->
                    <div class="col-md-9" id="EditProfile" style="display:none">
                        <div class="card">
                            <div class="card-header p-2">
                                <ul class="nav nav-pills">
                                    <li class="nav-item"><a class="nav-link active" href="#Personal" data-toggle="tab">Personal</a></li>
                                    <li class="nav-item"><a class="nav-link" href="#Contact" data-toggle="tab">Contact</a></li>
                                </ul>
                            </div><!-- /.card-header -->
                            <div class="card-body">
                                <div class="tab-content">
                                    <div class="active tab-pane" id="Personal">
                                        <div class="form-horizontal">
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                    @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                    @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    @Html.DropDownListFor(model => model.Nationality, (IEnumerable<SelectListItem>)ViewBag.Country, htmlAttributes: new { @class = "form-control", @autocomplete = "off" })
                                                    @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    @Html.DropDownListFor(model => model.Gender, ViewBag.Gender as SelectList, htmlAttributes: new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.userProfilePersonalModel.BloodGroup, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    @Html.DropDownListFor(model => model.userProfilePersonalModel.BloodGroup, (IEnumerable<SelectListItem>)ViewBag.BloodGroup, htmlAttributes: new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.userProfilePersonalModel.BloodGroup, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.MaritalStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    @Html.DropDownListFor(model => model.MaritalStatus, (IEnumerable<SelectListItem>)ViewBag.MartialStatus, htmlAttributes: new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.PanCardNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    @Html.EditorFor(model => model.PanCardNo, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                    @Html.ValidationMessageFor(model => model.PanCardNo, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <div class="col-sm-2"></div>
                                                <div class="col-sm-4">
                                                    <input type="submit" class="btn btn-default btn-block" value="Save" />
                                                </div>
                                                <div class="col-sm-4">
                                                    <input type="button" class="btn btn-default btn-block" id="Cancle" value="Cancle"  />
                                                </div>
                                                <div class="col-sm-2"></div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="tab-pane" id="Contact">
                                        <div class="form-horizontal">
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.userProfilePersonalModel.EmailId, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    @Html.EditorFor(model => model.userProfilePersonalModel.EmailId, new { htmlAttributes = new { @class = "form-control", @autocomplete = "xyz" } })
                                                    @Html.ValidationMessageFor(model => model.userProfilePersonalModel.EmailId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.userProfilePersonalModel.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    @Html.EditorFor(model => model.userProfilePersonalModel.MobileNo, new { htmlAttributes = new { @class = "form-control", @autocomplete = "xyz" } })
                                                    @Html.ValidationMessageFor(model => model.userProfilePersonalModel.MobileNo, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.userProfilePersonalModel.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    @Html.DropDownListFor(model => model.userProfilePersonalModel.Country, (IEnumerable<SelectListItem>)ViewBag.CountryIndia, htmlAttributes: new { @class = "form-control", @onChange = "getStates()" })
                                                    @Html.ValidationMessageFor(model => model.userProfilePersonalModel.Country, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.userProfilePersonalModel.State, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    @Html.DropDownListFor(model => model.userProfilePersonalModel.State, new SelectList(ViewBag.State, "Value", "Text"), htmlAttributes: new { @class = "form-control", @onChange = "getCity()" })
                                                    @Html.ValidationMessageFor(model => model.userProfilePersonalModel.State, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.userProfilePersonalModel.City, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    @Html.DropDownListFor(model => model.userProfilePersonalModel.City, new SelectList(ViewBag.City, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.userProfilePersonalModel.City, "", new { @class = "text-danger" })

                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.userProfilePersonalModel.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    @Html.EditorFor(model => model.userProfilePersonalModel.Address, new { htmlAttributes = new { @class = "form-control", @autocomplete = "xyz" } })
                                                    @Html.ValidationMessageFor(model => model.userProfilePersonalModel.Address, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.userProfilePersonalModel.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-sm-10">
                                                    @Html.EditorFor(model => model.userProfilePersonalModel.ZipCode, new { htmlAttributes = new { @class = "form-control", @autocomplete = "xyz" } })
                                                    @Html.ValidationMessageFor(model => model.userProfilePersonalModel.ZipCode, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <div class="col-sm-2"></div>
                                                <div class="col-sm-4">
                                                    <input type="submit" class="btn btn-default btn-block" value="Save" />
                                                </div>
                                                <div class="col-sm-4">
                                                    <input type="button" class="btn btn-default btn-block" id="Cancle1" value="Cancle" />
                                                </div>
                                                <div class="col-sm-2"></div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- /.tab-pane -->
                                </div>
                                <!-- /.tab-content -->
                            </div><!-- /.card-body -->
                        </div>
                        <!-- /.nav-tabs-custom -->
                    </div>
                </div>
                <!-- /.row -->
            </div><!-- /.container-fluid -->
        </section>
        <section class="content"  style="display:none">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-3">

                        <!-- Profile Image -->
                        <div class="card card-primary card-outline">
                            <div class="card-body box-profile">
                                <div class="text-center">
                                    <a href="javascript:void(0);" data-toggle="modal" data-target="#ModalProfileImage">
                                        <img class="profile-user-img img-fluid img-circle "
                                             src="@Model.ProfileImage"
                                             alt="User profile picture">
                                    </a>

                                </div>


                                <h3 class="profile-username text-center"><label>@name</label></h3>
                                <p class="text-muted text-center">Edit Software Engineer</p>
                                @*<ul class="list-group list-group-unbordered mb-3">
                                        <li class="list-group-item">
                                            <b>Followers</b> <a class="float-right">1,322</a>
                                        </li>
                                        <li class="list-group-item">
                                            <b>Following</b> <a class="float-right">543</a>
                                        </li>
                                        <li class="list-group-item">
                                            <b>Friends</b> <a class="float-right">13,287</a>
                                        </li>
                                    </ul>

                                    <a href="#" class="btn btn-primary btn-block"><b>Follow</b></a>*@
                            </div>
                            <!-- /.card-body -->
                        </div>
                        <!-- /.card -->
                        <!-- About Me Box -->
                        <div class="card card-primary">
                            <div class="card-header">
                                <h3 class="card-title">About Me</h3>
                            </div>
                            <!-- /.card-header -->
                            <div class="card-body">
                                <strong><i class="fas fa-book mr-1"></i> Education</strong>
                                <p class="text-muted">
                                    B.S. in Computer Science from the University of Tennessee at Knoxville
                                </p>
                                <hr>
                                <strong><i class="fas fa-map-marker-alt mr-1"></i> Location</strong>
                                <p class="text-muted">Malibu, California</p>
                                <hr>
                                <strong><i class="fas fa-pencil-alt mr-1"></i> Skills</strong>
                                <p class="text-muted">
                                    <span class="tag tag-danger">UI Design</span>
                                    <span class="tag tag-success">Coding</span>
                                    <span class="tag tag-info">Javascript</span>
                                    <span class="tag tag-warning">PHP</span>
                                    <span class="tag tag-primary">Node.js</span>
                                </p>
                                <hr>
                                <strong><i class="far fa-file-alt mr-1"></i> Notes</strong>
                                <p class="text-muted">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam fermentum enim neque.</p>
                            </div>
                            <!-- /.card-body -->
                        </div>
                        <!-- /.card -->
                    </div>
                    <!-- /.col -->
                    
                    <!-- /.col -->
                    <!--Edit -->

                </div>
                <!-- /.row -->
            </div><!-- /.container-fluid -->
        </section>

        <div class="modal fade" id="ModalProfileImage" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLongTitle">Profile Image</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        @using (Html.BeginForm("ProfileImage", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.HiddenFor(c => c.EmployeeId)
                            <div class="form-group row">
                                @Html.LabelFor(model => model.ProfileImage, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.ProfileImage, new { htmlAttributes = new { @class = "form-control", @autocomplete = "xyz", @type = "file" } })
                                    @Html.ValidationMessageFor(model => model.ProfileImage, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                    <input type="submit" value="Upload" class="btn btn-default btn-block" />
                                </div>
                                <div class="col-md-3">
                                    @Html.ActionLink("Remove Image", "RemoveImage", "User", new { @id = Model.EmployeeId }, new { @class = "btn btn-default btn-block" })
                                </div>
                            </div>
                        }
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
