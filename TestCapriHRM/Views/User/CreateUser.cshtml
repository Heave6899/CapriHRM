@model ViewModel.UserModel
@{
    ViewBag.Title = "CreateUser";
}

<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
@section scripts {
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>

    <script src="~/Scripts/jquery.validate.js"></script>

    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(c => c.UserId)
    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="row justify-content-center">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.EmployeeName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10 mw-100">
                   
                        @Html.DropDownListFor(model => model.EmployeeId, (IEnumerable<SelectListItem>)ViewBag.Employee, htmlAttributes: new { @class = "form-control", @autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10 mw-100">
                        @Html.DropDownListFor(model => model.Role, (IEnumerable<SelectListItem>)ViewBag.Role, htmlAttributes: new { @class = "form-control", @autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-md-8 ">
                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10 mw-100">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10 mw-100">
                        @Html.PasswordFor(model => model.Password,  htmlAttributes : new { @class = "form-control", @autocomplete = "new-password" } )
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.ConformPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10 mw-100">
                        @Html.PasswordFor(model => model.ConformPassword,htmlAttributes : new { @class = "form-control", @autocomplete = "new-password" } )
                        @Html.ValidationMessageFor(model => model.ConformPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row justify-content-center">
            <div class="col-md-4">
                <label class="btn-block">&nbsp;</label>
                @{
                    var isUpdate =  false;
                    Html.RenderAction("SubmitButton", "User", new { @controllname = "User", @actionname = "CreateUser", @IsUpdate = isUpdate });
                }
                @*<input type="submit" value="Add"  class="btn btn-default btn-block" />*@
            </div>
            <div class="col-md-4">
                <label class="btn-block">&nbsp;</label>
                @Html.ActionLink("Clear", "CreateUser", "User", new { @class = "btn btn-default btn-block" })

            </div>



        </div>
    </div>

}

